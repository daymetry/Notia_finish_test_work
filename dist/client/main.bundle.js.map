{"version":3,"sources":["C:/Users/Daymetry/Desktop/notia-test/client/$_gendir lazy","C:/Users/Daymetry/Desktop/notia-test/client/app/app-routing.module.ts","C:/Users/Daymetry/Desktop/notia-test/client/app/app.component.css","C:/Users/Daymetry/Desktop/notia-test/client/app/app.component.html","C:/Users/Daymetry/Desktop/notia-test/client/app/app.component.ts","C:/Users/Daymetry/Desktop/notia-test/client/app/app.module.ts","C:/Users/Daymetry/Desktop/notia-test/client/app/components/order/order.component.html","C:/Users/Daymetry/Desktop/notia-test/client/app/components/order/order.component.ts","C:/Users/Daymetry/Desktop/notia-test/client/environments/environment.ts","C:/Users/Daymetry/Desktop/notia-test/client/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,+E;;;;;;;;;;;;;;;;;;ACVuC;AACc;AAEa;AAElE,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,yFAAc,EAAE;CACxC,CAAC;AAMF,IAAa,gBAAgB;IAA7B;IAAgC,CAAC;IAAD,uBAAC;AAAD,CAAC;AAApB,gBAAgB;IAJ5B,uEAAQ,CAAC;QACR,OAAO,EAAE,CAAC,qEAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvC,OAAO,EAAE,CAAC,qEAAY,CAAC;KACxB,CAAC;GACW,gBAAgB,CAAI;AAAJ;;;;;;;;ACb7B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,+mBAA+mB,SAAS,wpE;;;;;;;;;;;;;;;;;;;ACAhlB;AAQxC,IAAa,YAAY;IAGvB;QAFA,YAAO,GAAG,gBAAgB,CAAC;IAEZ,CAAC;IAElB,mBAAC;AAAD,CAAC;AALY,YAAY;IANxB,wEAAS,CAAC;QAET,QAAQ,EAAE,UAAU;QACpB,6EAAmC;QACnC,4EAAkC;KACnC,CAAC;;GACW,YAAY,CAKxB;AALwB;;;;;;;;;;;;;;;;;;;;;;ACR+B;AACjB;AAEe;AACT;AAEqB;AACA;AAelE,IAAa,SAAS;IAAtB;IAEA,CAAC;IAAD,gBAAC;AAAD,CAAC;AAFY,SAAS;IAbrB,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;YACZ,yFAAc;SACf;QACD,OAAO,EAAE;YACP,8EAAgB;YAChB,gFAAa;YACb,6EAAgB;SACjB;QACD,SAAS,EAAE,CAAC,wEAAU,CAAC;QACvB,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAErB;AAFqB;;;;;;;;ACtBtB,4I;;;;;;;;;;;;;;;;;;;;ACAgD;AACA;AAShD,IAAa,cAAc;IACzB,wBAAoB,MAAkB;QAAlB,WAAM,GAAN,MAAM,CAAY;IAAG,CAAC;IAE1C,iCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,SAAS,CACpC,UAAC,IAAiB;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,EAAE,aAAG;YACJ,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IACH,qBAAC;AAAD,CAAC;AAZY,cAAc;IAN1B,wEAAS,CAAC;QAET,QAAQ,EAAE,WAAW;QACrB,gGAAqC;QACrC,SAAS,EAAE,EAAE;KACd,CAAC;yDAE4B,wEAAU,oBAAV,wEAAU;GAD3B,cAAc,CAY1B;AAZ0B;;;;;;;;;;ACV3B;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../client/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Daymetry/Desktop/notia-test/client/$$_gendir lazy\n// module id = ../../../../../client/$$_gendir lazy recursive\n// module chunks = main","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {InfoComponent} from './components/info/info.component';\r\nimport {OrderComponent} from './components/order/order.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: OrderComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Daymetry/Desktop/notia-test/client/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Daymetry/Desktop/notia-test/client/app/app.component.css\n// module id = ../../../../../client/app/app.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <!-- Brand and toggle get grouped for better mobile display -->\\r\\n    <div class=\\\"navbar-header\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\r\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n      </button>\\r\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{m_title}}</a>\\r\\n    </div>\\r\\n\\r\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\r\\n      <ul class=\\\"nav navbar-nav\\\">\\r\\n        <li class=\\\"active\\\"><a href=\\\"#\\\">Link <span class=\\\"sr-only\\\">(current)</span></a></li>\\r\\n        <li><a href=\\\"#\\\">Link</a></li>\\r\\n        <li class=\\\"dropdown\\\">\\r\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Dropdown <span class=\\\"caret\\\"></span></a>\\r\\n          <ul class=\\\"dropdown-menu\\\">\\r\\n            <li><a href=\\\"#\\\">Action</a></li>\\r\\n            <li><a href=\\\"#\\\">Another action</a></li>\\r\\n            <li><a href=\\\"#\\\">Something else here</a></li>\\r\\n            <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\r\\n            <li><a href=\\\"#\\\">Separated link</a></li>\\r\\n            <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\r\\n            <li><a href=\\\"#\\\">One more separated link</a></li>\\r\\n          </ul>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <form class=\\\"navbar-form navbar-left\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\">\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Submit</button>\\r\\n      </form>\\r\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n        <li><a href=\\\"#\\\">Link</a></li>\\r\\n        <li class=\\\"dropdown\\\">\\r\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Dropdown <span class=\\\"caret\\\"></span></a>\\r\\n          <ul class=\\\"dropdown-menu\\\">\\r\\n            <li><a href=\\\"#\\\">Action</a></li>\\r\\n            <li><a href=\\\"#\\\">Another action</a></li>\\r\\n            <li><a href=\\\"#\\\">Something else here</a></li>\\r\\n            <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\r\\n            <li><a href=\\\"#\\\">Separated link</a></li>\\r\\n          </ul>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div><!-- /.navbar-collapse -->\\r\\n  </div><!-- /.container-fluid -->\\r\\n</nav>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Daymetry/Desktop/notia-test/client/app/app.component.html\n// module id = ../../../../../client/app/app.component.html\n// module chunks = main","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  m_title = 'Notia test app';\r\n\r\n  constructor() {}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Daymetry/Desktop/notia-test/client/app/app.component.ts","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {InfoComponent} from './components/info/info.component';\r\nimport {OrderComponent} from './components/order/order.component';\r\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    OrderComponent\r\n  ],\r\n  imports: [\r\n    HttpClientModule,\r\n    BrowserModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [HttpClient],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Daymetry/Desktop/notia-test/client/app/app.module.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h3 class=\\\"page-header\\\">Order</h3>\\r\\n\\r\\n  <p>This is Order component</p>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Daymetry/Desktop/notia-test/client/app/components/order/order.component.html\n// module id = ../../../../../client/app/components/order/order.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {APIResponse} from '../../interfaces/api-response.interface';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'app-order',\r\n  templateUrl: './order.component.html',\r\n  providers: []\r\n})\r\nexport class OrderComponent implements OnInit {\r\n  constructor(private m_http: HttpClient) {}\r\n\r\n  ngOnInit() {\r\n    this.m_http.get('/api/test').subscribe(\r\n      (data: APIResponse) => {\r\n        console.log(data);\r\n      }, err => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Daymetry/Desktop/notia-test/client/app/components/order/order.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Daymetry/Desktop/notia-test/client/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Daymetry/Desktop/notia-test/client/main.ts"],"sourceRoot":"webpack:///"}